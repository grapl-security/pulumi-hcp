{
    "name": "hcp",
    "displayName": "HashiCorp Cloud Platform (HCP)",
    "description": "A Pulumi package for creating and managing HCP cloud resources.",
    "keywords": [
        "pulumi",
        "hcp",
        "category/infrastructure"
    ],
    "homepage": "https://pulumi.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`hcp` Terraform Provider](https://github.com/hashicorp/terraform-provider-hcp).",
    "repository": "https://github.com/grapl-security/pulumi-hcp",
    "logoUrl": "https://raw.githubusercontent.com/grapl-security/pulumi-hcp/main/assets/hcp.svg",
    "pluginDownloadURL": "https://github.com/grapl-security/pulumi-hcp/releases/download/v${VERSION}",
    "publisher": "Grapl Security",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/grapl-security/pulumi-hcp/sdk/go/hcp"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing HCP cloud resources.",
            "packageName": "@grapl/pulumi-hcp",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/hashicorp/terraform-provider-hcp)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-hcp` repo](https://github.com/pulumi/pulumi-hcp/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`hashicorp/terraform-provider-hcp` repo](https://github.com/hashicorp/terraform-provider-hcp/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/hashicorp/terraform-provider-hcp)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi/pulumi-hcp` repo](https://github.com/pulumi/pulumi-hcp/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`hashicorp/terraform-provider-hcp` repo](https://github.com/hashicorp/terraform-provider-hcp/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "clientId": {
                "type": "string",
                "description": "The OAuth2 Client ID for API operations.\n",
                "defaultInfo": {
                    "environment": [
                        "HCP_CLIENT_ID"
                    ]
                }
            },
            "clientSecret": {
                "type": "string",
                "description": "The OAuth2 Client Secret for API operations.\n",
                "defaultInfo": {
                    "environment": [
                        "HCP_CLIENT_SECRET"
                    ]
                },
                "secret": true
            }
        }
    },
    "types": {
        "hcp:index/VaultClusterAuditLogConfig:VaultClusterAuditLogConfig": {
            "properties": {
                "datadogApiKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datadogRegion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grafanaEndpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grafanaPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grafanaUser": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "splunkHecendpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "splunkToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "hcp:index/VaultClusterMetricsConfig:VaultClusterMetricsConfig": {
            "properties": {
                "datadogApiKey": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "datadogRegion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grafanaEndpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grafanaPassword": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grafanaUser": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "splunkHecendpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "splunkToken": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object"
        },
        "hcp:index/getPackerImageIterationBuild:getPackerImageIterationBuild": {
            "properties": {
                "cloudProvider": {
                    "type": "string",
                    "description": "Name of the cloud provider this image is stored-in, if any.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "componentType": {
                    "type": "string",
                    "description": "Name of the builder that built this. Ex: 'amazon-ebs.example'.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "createdAt": {
                    "type": "string",
                    "description": "Creation time of this build.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "HCP ID of this build.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "images": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/hcp:index/getPackerImageIterationBuildImage:getPackerImageIterationBuildImage"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "labels": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Labels for this build.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "packerRunUuid": {
                    "type": "string",
                    "description": "Packer generated UUID of this build.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "status": {
                    "type": "string",
                    "description": "Status of this build. DONE means that all images tied to this build were successfully built.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "updatedAt": {
                    "type": "string",
                    "description": "Time this build was last updated.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cloudProvider",
                "componentType",
                "createdAt",
                "id",
                "images",
                "labels",
                "packerRunUuid",
                "status",
                "updatedAt"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "hcp:index/getPackerImageIterationBuildImage:getPackerImageIterationBuildImage": {
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "Creation time of this iteration\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "description": "The ID of this resource.\n",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "imageId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "region": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "createdAt",
                "id",
                "imageId",
                "region"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "hcp:index/getVaultClusterAuditLogConfig:getVaultClusterAuditLogConfig": {
            "properties": {
                "datadogRegion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grafanaEndpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grafanaUser": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "splunkHecendpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datadogRegion",
                "grafanaEndpoint",
                "grafanaUser",
                "splunkHecendpoint"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "hcp:index/getVaultClusterMetricsConfig:getVaultClusterMetricsConfig": {
            "properties": {
                "datadogRegion": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grafanaEndpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "grafanaUser": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "splunkHecendpoint": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "datadogRegion",
                "grafanaEndpoint",
                "grafanaUser",
                "splunkHecendpoint"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the hcp package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "clientId": {
                "type": "string",
                "description": "The OAuth2 Client ID for API operations.\n"
            },
            "clientSecret": {
                "type": "string",
                "description": "The OAuth2 Client Secret for API operations.\n",
                "secret": true
            }
        },
        "inputProperties": {
            "clientId": {
                "type": "string",
                "description": "The OAuth2 Client ID for API operations.\n",
                "defaultInfo": {
                    "environment": [
                        "HCP_CLIENT_ID"
                    ]
                }
            },
            "clientSecret": {
                "type": "string",
                "description": "The OAuth2 Client Secret for API operations.\n",
                "defaultInfo": {
                    "environment": [
                        "HCP_CLIENT_SECRET"
                    ]
                },
                "secret": true
            }
        }
    },
    "resources": {
        "hcp:index/awsNetworkPeering:AwsNetworkPeering": {
            "description": "The AWS network peering resource allows you to manage a network peering between an HVN and a peer AWS VPC.\n\n\n## Import\n\n# The import ID is {hvn_id}:{peering_id}\n\n```sh\n $ pulumi import hcp:index/awsNetworkPeering:AwsNetworkPeering peer main-hvn:11eb60b3-d4ec-5eed-aacc-0242ac120015\n```\n\n ",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The time that the network peering was created.\n"
                },
                "expiresAt": {
                    "type": "string",
                    "description": "The time after which the network peering will be considered expired if it hasn't transitioned into `ACCEPTED` or\n`ACTIVE` state.\n"
                },
                "hvnId": {
                    "type": "string",
                    "description": "The ID of the HashiCorp Virtual Network (HVN).\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the HCP organization where the network peering is located. Always matches the HVN's organization.\n"
                },
                "peerAccountId": {
                    "type": "string",
                    "description": "The account ID of the peer VPC in AWS.\n"
                },
                "peerVpcId": {
                    "type": "string",
                    "description": "The ID of the peer VPC in AWS.\n"
                },
                "peerVpcRegion": {
                    "type": "string",
                    "description": "The region of the peer VPC in AWS.\n"
                },
                "peeringId": {
                    "type": "string",
                    "description": "The ID of the network peering.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the HCP project where the network peering is located. Always matches the HVN's project.\n"
                },
                "providerPeeringId": {
                    "type": "string",
                    "description": "The peering connection ID used by AWS.\n"
                },
                "selfLink": {
                    "type": "string",
                    "description": "A unique URL identifying the network peering.\n"
                }
            },
            "required": [
                "createdAt",
                "expiresAt",
                "hvnId",
                "organizationId",
                "peerAccountId",
                "peerVpcId",
                "peerVpcRegion",
                "peeringId",
                "projectId",
                "providerPeeringId",
                "selfLink"
            ],
            "inputProperties": {
                "hvnId": {
                    "type": "string",
                    "description": "The ID of the HashiCorp Virtual Network (HVN).\n",
                    "willReplaceOnChanges": true
                },
                "peerAccountId": {
                    "type": "string",
                    "description": "The account ID of the peer VPC in AWS.\n",
                    "willReplaceOnChanges": true
                },
                "peerVpcId": {
                    "type": "string",
                    "description": "The ID of the peer VPC in AWS.\n",
                    "willReplaceOnChanges": true
                },
                "peerVpcRegion": {
                    "type": "string",
                    "description": "The region of the peer VPC in AWS.\n",
                    "willReplaceOnChanges": true
                },
                "peeringId": {
                    "type": "string",
                    "description": "The ID of the network peering.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "hvnId",
                "peerAccountId",
                "peerVpcId",
                "peerVpcRegion",
                "peeringId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AwsNetworkPeering resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The time that the network peering was created.\n"
                    },
                    "expiresAt": {
                        "type": "string",
                        "description": "The time after which the network peering will be considered expired if it hasn't transitioned into `ACCEPTED` or\n`ACTIVE` state.\n"
                    },
                    "hvnId": {
                        "type": "string",
                        "description": "The ID of the HashiCorp Virtual Network (HVN).\n",
                        "willReplaceOnChanges": true
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The ID of the HCP organization where the network peering is located. Always matches the HVN's organization.\n"
                    },
                    "peerAccountId": {
                        "type": "string",
                        "description": "The account ID of the peer VPC in AWS.\n",
                        "willReplaceOnChanges": true
                    },
                    "peerVpcId": {
                        "type": "string",
                        "description": "The ID of the peer VPC in AWS.\n",
                        "willReplaceOnChanges": true
                    },
                    "peerVpcRegion": {
                        "type": "string",
                        "description": "The region of the peer VPC in AWS.\n",
                        "willReplaceOnChanges": true
                    },
                    "peeringId": {
                        "type": "string",
                        "description": "The ID of the network peering.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The ID of the HCP project where the network peering is located. Always matches the HVN's project.\n"
                    },
                    "providerPeeringId": {
                        "type": "string",
                        "description": "The peering connection ID used by AWS.\n"
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "A unique URL identifying the network peering.\n"
                    }
                },
                "type": "object"
            }
        },
        "hcp:index/awsTransitGatewayAttachment:AwsTransitGatewayAttachment": {
            "description": "\n\n## Import\n\n# The import ID is {hvn_id}:{transit_gateway_attachment_id}\n\n```sh\n $ pulumi import hcp:index/awsTransitGatewayAttachment:AwsTransitGatewayAttachment example main-hvn:example-tgw-attachment\n```\n\n ",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The time that the transit gateway attachment was created.\n"
                },
                "expiresAt": {
                    "type": "string",
                    "description": "The time after which the transit gateway attachment will be considered expired if it hasn't transitioned into `ACCEPTED`\nor `ACTIVE` state.\n"
                },
                "hvnId": {
                    "type": "string",
                    "description": "The ID of the HashiCorp Virtual Network (HVN).\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the HCP organization where the transit gateway attachment is located. Always matches the HVN's organization.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the HCP project where the transit gateway attachment is located. Always matches the HVN's project.\n"
                },
                "providerTransitGatewayAttachmentId": {
                    "type": "string",
                    "description": "The transit gateway attachment ID used by AWS.\n"
                },
                "resourceShareArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the Resource Share that is needed to grant HCP access to the transit gateway in AWS.\nThe Resource Share should be associated with the HCP AWS account principal (see\n[aws_ram_principal_association](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ram_principal_association))\nand the transit gateway resource (see\n[aws_ram_resource_association](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ram_resource_association))\n"
                },
                "selfLink": {
                    "type": "string",
                    "description": "A unique URL identifying the transit gateway attachment.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The state of the transit gateway attachment.\n"
                },
                "transitGatewayAttachmentId": {
                    "type": "string",
                    "description": "The user-settable name of the transit gateway attachment in HCP.\n"
                },
                "transitGatewayId": {
                    "type": "string",
                    "description": "The ID of the user-owned transit gateway in AWS. The AWS region of the transit gateway must match the HVN.\n"
                }
            },
            "required": [
                "createdAt",
                "expiresAt",
                "hvnId",
                "organizationId",
                "projectId",
                "providerTransitGatewayAttachmentId",
                "resourceShareArn",
                "selfLink",
                "state",
                "transitGatewayAttachmentId",
                "transitGatewayId"
            ],
            "inputProperties": {
                "hvnId": {
                    "type": "string",
                    "description": "The ID of the HashiCorp Virtual Network (HVN).\n",
                    "willReplaceOnChanges": true
                },
                "resourceShareArn": {
                    "type": "string",
                    "description": "The Amazon Resource Name (ARN) of the Resource Share that is needed to grant HCP access to the transit gateway in AWS.\nThe Resource Share should be associated with the HCP AWS account principal (see\n[aws_ram_principal_association](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ram_principal_association))\nand the transit gateway resource (see\n[aws_ram_resource_association](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ram_resource_association))\n",
                    "willReplaceOnChanges": true
                },
                "transitGatewayAttachmentId": {
                    "type": "string",
                    "description": "The user-settable name of the transit gateway attachment in HCP.\n",
                    "willReplaceOnChanges": true
                },
                "transitGatewayId": {
                    "type": "string",
                    "description": "The ID of the user-owned transit gateway in AWS. The AWS region of the transit gateway must match the HVN.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "hvnId",
                "resourceShareArn",
                "transitGatewayAttachmentId",
                "transitGatewayId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AwsTransitGatewayAttachment resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The time that the transit gateway attachment was created.\n"
                    },
                    "expiresAt": {
                        "type": "string",
                        "description": "The time after which the transit gateway attachment will be considered expired if it hasn't transitioned into `ACCEPTED`\nor `ACTIVE` state.\n"
                    },
                    "hvnId": {
                        "type": "string",
                        "description": "The ID of the HashiCorp Virtual Network (HVN).\n",
                        "willReplaceOnChanges": true
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The ID of the HCP organization where the transit gateway attachment is located. Always matches the HVN's organization.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The ID of the HCP project where the transit gateway attachment is located. Always matches the HVN's project.\n"
                    },
                    "providerTransitGatewayAttachmentId": {
                        "type": "string",
                        "description": "The transit gateway attachment ID used by AWS.\n"
                    },
                    "resourceShareArn": {
                        "type": "string",
                        "description": "The Amazon Resource Name (ARN) of the Resource Share that is needed to grant HCP access to the transit gateway in AWS.\nThe Resource Share should be associated with the HCP AWS account principal (see\n[aws_ram_principal_association](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ram_principal_association))\nand the transit gateway resource (see\n[aws_ram_resource_association](https://registry.terraform.io/providers/hashicorp/aws/latest/docs/resources/ram_resource_association))\n",
                        "willReplaceOnChanges": true
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "A unique URL identifying the transit gateway attachment.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The state of the transit gateway attachment.\n"
                    },
                    "transitGatewayAttachmentId": {
                        "type": "string",
                        "description": "The user-settable name of the transit gateway attachment in HCP.\n",
                        "willReplaceOnChanges": true
                    },
                    "transitGatewayId": {
                        "type": "string",
                        "description": "The ID of the user-owned transit gateway in AWS. The AWS region of the transit gateway must match the HVN.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "hcp:index/azurePeeringConnection:AzurePeeringConnection": {
            "description": "\u003e **Note:** This data source is currently in public beta.\n\nThe Azure peering connection resource allows you to manage a peering connection between an HVN and a peer Azure VNet.\n\n\n## Import\n\n# The import ID is {hvn_id}:{peering_id}\n\n```sh\n $ pulumi import hcp:index/azurePeeringConnection:AzurePeeringConnection peer main-hvn:199e7e96-4d5f-4456-91f3-b6cc71f1e561\n```\n\n ",
            "properties": {
                "applicationId": {
                    "type": "string",
                    "description": "The ID of the Azure application whose credentials are used to peer the HCP HVN's underlying VNet with the customer VNet.\n"
                },
                "azurePeeringId": {
                    "type": "string",
                    "description": "The peering connection ID used by Azure.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time that the peering connection was created.\n"
                },
                "expiresAt": {
                    "type": "string",
                    "description": "The time after which the peering connection will be considered expired if it hasn't transitioned into `ACCEPTED` or\n`ACTIVE` state.\n"
                },
                "hvnLink": {
                    "type": "string",
                    "description": "The `self_link` of the HashiCorp Virtual Network (HVN).\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the HCP organization where the peering connection is located. Always matches the HVN's organization.\n"
                },
                "peerResourceGroupName": {
                    "type": "string",
                    "description": "The resource group name of the peer VNet in Azure.\n"
                },
                "peerSubscriptionId": {
                    "type": "string",
                    "description": "The subscription ID of the peer VNet in Azure.\n"
                },
                "peerTenantId": {
                    "type": "string",
                    "description": "The tenant ID of the peer VNet in Azure.\n"
                },
                "peerVnetName": {
                    "type": "string",
                    "description": "The name of the peer VNet in Azure.\n"
                },
                "peerVnetRegion": {
                    "type": "string",
                    "description": "The region of the peer VNet in Azure.\n"
                },
                "peeringId": {
                    "type": "string",
                    "description": "The ID of the peering connection.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the HCP project where the peering connection is located. Always matches the HVN's project.\n"
                },
                "selfLink": {
                    "type": "string",
                    "description": "A unique URL identifying the peering connection.\n"
                }
            },
            "required": [
                "applicationId",
                "azurePeeringId",
                "createdAt",
                "expiresAt",
                "hvnLink",
                "organizationId",
                "peerResourceGroupName",
                "peerSubscriptionId",
                "peerTenantId",
                "peerVnetName",
                "peerVnetRegion",
                "peeringId",
                "projectId",
                "selfLink"
            ],
            "inputProperties": {
                "hvnLink": {
                    "type": "string",
                    "description": "The `self_link` of the HashiCorp Virtual Network (HVN).\n",
                    "willReplaceOnChanges": true
                },
                "peerResourceGroupName": {
                    "type": "string",
                    "description": "The resource group name of the peer VNet in Azure.\n",
                    "willReplaceOnChanges": true
                },
                "peerSubscriptionId": {
                    "type": "string",
                    "description": "The subscription ID of the peer VNet in Azure.\n",
                    "willReplaceOnChanges": true
                },
                "peerTenantId": {
                    "type": "string",
                    "description": "The tenant ID of the peer VNet in Azure.\n",
                    "willReplaceOnChanges": true
                },
                "peerVnetName": {
                    "type": "string",
                    "description": "The name of the peer VNet in Azure.\n",
                    "willReplaceOnChanges": true
                },
                "peerVnetRegion": {
                    "type": "string",
                    "description": "The region of the peer VNet in Azure.\n",
                    "willReplaceOnChanges": true
                },
                "peeringId": {
                    "type": "string",
                    "description": "The ID of the peering connection.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "hvnLink",
                "peerResourceGroupName",
                "peerSubscriptionId",
                "peerTenantId",
                "peerVnetName",
                "peerVnetRegion",
                "peeringId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering AzurePeeringConnection resources.\n",
                "properties": {
                    "applicationId": {
                        "type": "string",
                        "description": "The ID of the Azure application whose credentials are used to peer the HCP HVN's underlying VNet with the customer VNet.\n"
                    },
                    "azurePeeringId": {
                        "type": "string",
                        "description": "The peering connection ID used by Azure.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The time that the peering connection was created.\n"
                    },
                    "expiresAt": {
                        "type": "string",
                        "description": "The time after which the peering connection will be considered expired if it hasn't transitioned into `ACCEPTED` or\n`ACTIVE` state.\n"
                    },
                    "hvnLink": {
                        "type": "string",
                        "description": "The `self_link` of the HashiCorp Virtual Network (HVN).\n",
                        "willReplaceOnChanges": true
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The ID of the HCP organization where the peering connection is located. Always matches the HVN's organization.\n"
                    },
                    "peerResourceGroupName": {
                        "type": "string",
                        "description": "The resource group name of the peer VNet in Azure.\n",
                        "willReplaceOnChanges": true
                    },
                    "peerSubscriptionId": {
                        "type": "string",
                        "description": "The subscription ID of the peer VNet in Azure.\n",
                        "willReplaceOnChanges": true
                    },
                    "peerTenantId": {
                        "type": "string",
                        "description": "The tenant ID of the peer VNet in Azure.\n",
                        "willReplaceOnChanges": true
                    },
                    "peerVnetName": {
                        "type": "string",
                        "description": "The name of the peer VNet in Azure.\n",
                        "willReplaceOnChanges": true
                    },
                    "peerVnetRegion": {
                        "type": "string",
                        "description": "The region of the peer VNet in Azure.\n",
                        "willReplaceOnChanges": true
                    },
                    "peeringId": {
                        "type": "string",
                        "description": "The ID of the peering connection.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The ID of the HCP project where the peering connection is located. Always matches the HVN's project.\n"
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "A unique URL identifying the peering connection.\n"
                    }
                },
                "type": "object"
            }
        },
        "hcp:index/consulCluster:ConsulCluster": {
            "description": "\u003e Consul on Azure is now available in public beta. [Get started with end-to-end deployment configuration](https://learn.hashicorp.com/tutorials/cloud/consul-end-to-end-overview).\n\nThe Consul cluster resource allows you to manage an HCP Consul cluster.\n\n\n## Import\n\n# The import ID is {cluster_id}\n\n```sh\n $ pulumi import hcp:index/consulCluster:ConsulCluster example consul-cluster\n```\n\n ",
            "properties": {
                "autoHvnToHvnPeering": {
                    "type": "boolean",
                    "description": "Enables automatic HVN to HVN peering when creating a secondary cluster in a federation. The alternative to using the\nauto-accept feature is to create an [`hcp_hvn_peering_connection`](hvn_peering_connection.md) resource that explicitly\ndefines the HVN resources that are allowed to communicate with each other.\n"
                },
                "cloudProvider": {
                    "type": "string",
                    "description": "The provider where the HCP Consul cluster is located.\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the HCP Consul cluster.\n"
                },
                "connectEnabled": {
                    "type": "boolean",
                    "description": "Denotes the Consul connect feature should be enabled for this cluster. Default to true.\n"
                },
                "consulAutomaticUpgrades": {
                    "type": "boolean",
                    "description": "Denotes that automatic Consul upgrades are enabled.\n"
                },
                "consulCaFile": {
                    "type": "string",
                    "description": "The cluster CA file encoded as a Base64 string.\n"
                },
                "consulConfigFile": {
                    "type": "string",
                    "description": "The cluster config encoded as a Base64 string.\n"
                },
                "consulPrivateEndpointUrl": {
                    "type": "string",
                    "description": "The private URL for the Consul UI.\n"
                },
                "consulPublicEndpointUrl": {
                    "type": "string",
                    "description": "The public URL for the Consul UI. This will be empty if `public_endpoint` is `false`.\n"
                },
                "consulRootTokenAccessorId": {
                    "type": "string",
                    "description": "The accessor ID of the root ACL token that is generated upon cluster creation. If a new root token is generated using\nthe `hcp_consul_root_token` resource, this field is no longer valid.\n"
                },
                "consulRootTokenSecretId": {
                    "type": "string",
                    "description": "The secret ID of the root ACL token that is generated upon cluster creation. If a new root token is generated using the\n`hcp_consul_root_token` resource, this field is no longer valid.\n"
                },
                "consulSnapshotInterval": {
                    "type": "string",
                    "description": "The Consul snapshot interval.\n"
                },
                "consulSnapshotRetention": {
                    "type": "string",
                    "description": "The retention policy for Consul snapshots.\n"
                },
                "consulVersion": {
                    "type": "string",
                    "description": "The Consul version of the cluster.\n"
                },
                "datacenter": {
                    "type": "string",
                    "description": "The Consul data center name of the cluster. If not specified, it is defaulted to the value of `cluster_id`.\n"
                },
                "hvnId": {
                    "type": "string",
                    "description": "The ID of the HVN this HCP Consul cluster is associated to.\n"
                },
                "minConsulVersion": {
                    "type": "string",
                    "description": "The minimum Consul version of the cluster. If not specified, it is defaulted to the version that is currently\nrecommended by HCP.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization this HCP Consul cluster is located in.\n"
                },
                "primaryLink": {
                    "type": "string",
                    "description": "The `self_link` of the HCP Consul cluster which is the primary in the federation setup with this HCP Consul cluster. If\nnot specified, it is a standalone cluster.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project this HCP Consul cluster is located in.\n"
                },
                "publicEndpoint": {
                    "type": "boolean",
                    "description": "Denotes that the cluster has a public endpoint for the Consul UI. Defaults to false.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the HCP Consul cluster is located.\n"
                },
                "scale": {
                    "type": "integer",
                    "description": "The number of Consul server nodes in the cluster.\n"
                },
                "selfLink": {
                    "type": "string",
                    "description": "A unique URL identifying the HCP Consul cluster.\n"
                },
                "size": {
                    "type": "string",
                    "description": "The t-shirt size representation of each server VM that this Consul cluster is provisioned with. Valid option for\ndevelopment tier - `x_small`. Valid options for other tiers - `small`, `medium`, `large`. For more details -\nhttps://cloud.hashicorp.com/pricing/consul. Upgrading the size of a cluster after creation is allowed.\n"
                },
                "tier": {
                    "type": "string",
                    "description": "The tier that the HCP Consul cluster will be provisioned as. Only `development`, `standard` and `plus` are available at\nthis time. See [pricing information](https://cloud.hashicorp.com/pricing/consul).\n"
                }
            },
            "required": [
                "autoHvnToHvnPeering",
                "cloudProvider",
                "clusterId",
                "consulAutomaticUpgrades",
                "consulCaFile",
                "consulConfigFile",
                "consulPrivateEndpointUrl",
                "consulPublicEndpointUrl",
                "consulRootTokenAccessorId",
                "consulRootTokenSecretId",
                "consulSnapshotInterval",
                "consulSnapshotRetention",
                "consulVersion",
                "datacenter",
                "hvnId",
                "organizationId",
                "projectId",
                "region",
                "scale",
                "selfLink",
                "size",
                "tier"
            ],
            "inputProperties": {
                "autoHvnToHvnPeering": {
                    "type": "boolean",
                    "description": "Enables automatic HVN to HVN peering when creating a secondary cluster in a federation. The alternative to using the\nauto-accept feature is to create an [`hcp_hvn_peering_connection`](hvn_peering_connection.md) resource that explicitly\ndefines the HVN resources that are allowed to communicate with each other.\n",
                    "willReplaceOnChanges": true
                },
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the HCP Consul cluster.\n",
                    "willReplaceOnChanges": true
                },
                "connectEnabled": {
                    "type": "boolean",
                    "description": "Denotes the Consul connect feature should be enabled for this cluster. Default to true.\n",
                    "willReplaceOnChanges": true
                },
                "datacenter": {
                    "type": "string",
                    "description": "The Consul data center name of the cluster. If not specified, it is defaulted to the value of `cluster_id`.\n",
                    "willReplaceOnChanges": true
                },
                "hvnId": {
                    "type": "string",
                    "description": "The ID of the HVN this HCP Consul cluster is associated to.\n",
                    "willReplaceOnChanges": true
                },
                "minConsulVersion": {
                    "type": "string",
                    "description": "The minimum Consul version of the cluster. If not specified, it is defaulted to the version that is currently\nrecommended by HCP.\n"
                },
                "primaryLink": {
                    "type": "string",
                    "description": "The `self_link` of the HCP Consul cluster which is the primary in the federation setup with this HCP Consul cluster. If\nnot specified, it is a standalone cluster.\n",
                    "willReplaceOnChanges": true
                },
                "publicEndpoint": {
                    "type": "boolean",
                    "description": "Denotes that the cluster has a public endpoint for the Consul UI. Defaults to false.\n",
                    "willReplaceOnChanges": true
                },
                "size": {
                    "type": "string",
                    "description": "The t-shirt size representation of each server VM that this Consul cluster is provisioned with. Valid option for\ndevelopment tier - `x_small`. Valid options for other tiers - `small`, `medium`, `large`. For more details -\nhttps://cloud.hashicorp.com/pricing/consul. Upgrading the size of a cluster after creation is allowed.\n"
                },
                "tier": {
                    "type": "string",
                    "description": "The tier that the HCP Consul cluster will be provisioned as. Only `development`, `standard` and `plus` are available at\nthis time. See [pricing information](https://cloud.hashicorp.com/pricing/consul).\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId",
                "hvnId",
                "tier"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ConsulCluster resources.\n",
                "properties": {
                    "autoHvnToHvnPeering": {
                        "type": "boolean",
                        "description": "Enables automatic HVN to HVN peering when creating a secondary cluster in a federation. The alternative to using the\nauto-accept feature is to create an [`hcp_hvn_peering_connection`](hvn_peering_connection.md) resource that explicitly\ndefines the HVN resources that are allowed to communicate with each other.\n",
                        "willReplaceOnChanges": true
                    },
                    "cloudProvider": {
                        "type": "string",
                        "description": "The provider where the HCP Consul cluster is located.\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the HCP Consul cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "connectEnabled": {
                        "type": "boolean",
                        "description": "Denotes the Consul connect feature should be enabled for this cluster. Default to true.\n",
                        "willReplaceOnChanges": true
                    },
                    "consulAutomaticUpgrades": {
                        "type": "boolean",
                        "description": "Denotes that automatic Consul upgrades are enabled.\n"
                    },
                    "consulCaFile": {
                        "type": "string",
                        "description": "The cluster CA file encoded as a Base64 string.\n"
                    },
                    "consulConfigFile": {
                        "type": "string",
                        "description": "The cluster config encoded as a Base64 string.\n"
                    },
                    "consulPrivateEndpointUrl": {
                        "type": "string",
                        "description": "The private URL for the Consul UI.\n"
                    },
                    "consulPublicEndpointUrl": {
                        "type": "string",
                        "description": "The public URL for the Consul UI. This will be empty if `public_endpoint` is `false`.\n"
                    },
                    "consulRootTokenAccessorId": {
                        "type": "string",
                        "description": "The accessor ID of the root ACL token that is generated upon cluster creation. If a new root token is generated using\nthe `hcp_consul_root_token` resource, this field is no longer valid.\n"
                    },
                    "consulRootTokenSecretId": {
                        "type": "string",
                        "description": "The secret ID of the root ACL token that is generated upon cluster creation. If a new root token is generated using the\n`hcp_consul_root_token` resource, this field is no longer valid.\n"
                    },
                    "consulSnapshotInterval": {
                        "type": "string",
                        "description": "The Consul snapshot interval.\n"
                    },
                    "consulSnapshotRetention": {
                        "type": "string",
                        "description": "The retention policy for Consul snapshots.\n"
                    },
                    "consulVersion": {
                        "type": "string",
                        "description": "The Consul version of the cluster.\n"
                    },
                    "datacenter": {
                        "type": "string",
                        "description": "The Consul data center name of the cluster. If not specified, it is defaulted to the value of `cluster_id`.\n",
                        "willReplaceOnChanges": true
                    },
                    "hvnId": {
                        "type": "string",
                        "description": "The ID of the HVN this HCP Consul cluster is associated to.\n",
                        "willReplaceOnChanges": true
                    },
                    "minConsulVersion": {
                        "type": "string",
                        "description": "The minimum Consul version of the cluster. If not specified, it is defaulted to the version that is currently\nrecommended by HCP.\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The ID of the organization this HCP Consul cluster is located in.\n"
                    },
                    "primaryLink": {
                        "type": "string",
                        "description": "The `self_link` of the HCP Consul cluster which is the primary in the federation setup with this HCP Consul cluster. If\nnot specified, it is a standalone cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The ID of the project this HCP Consul cluster is located in.\n"
                    },
                    "publicEndpoint": {
                        "type": "boolean",
                        "description": "Denotes that the cluster has a public endpoint for the Consul UI. Defaults to false.\n",
                        "willReplaceOnChanges": true
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the HCP Consul cluster is located.\n"
                    },
                    "scale": {
                        "type": "integer",
                        "description": "The number of Consul server nodes in the cluster.\n"
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "A unique URL identifying the HCP Consul cluster.\n"
                    },
                    "size": {
                        "type": "string",
                        "description": "The t-shirt size representation of each server VM that this Consul cluster is provisioned with. Valid option for\ndevelopment tier - `x_small`. Valid options for other tiers - `small`, `medium`, `large`. For more details -\nhttps://cloud.hashicorp.com/pricing/consul. Upgrading the size of a cluster after creation is allowed.\n"
                    },
                    "tier": {
                        "type": "string",
                        "description": "The tier that the HCP Consul cluster will be provisioned as. Only `development`, `standard` and `plus` are available at\nthis time. See [pricing information](https://cloud.hashicorp.com/pricing/consul).\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "hcp:index/consulClusterRootToken:ConsulClusterRootToken": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as hcp from \"@pulumi/hcp\";\n\nconst example = new hcp.ConsulClusterRootToken(\"example\", {\n    clusterId: \"consul-cluster\",\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "accessorId": {
                    "type": "string",
                    "description": "The accessor ID of the root ACL token.\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the HCP Consul cluster.\n"
                },
                "kubernetesSecret": {
                    "type": "string",
                    "description": "The root ACL token Base64 encoded in a Kubernetes secret.\n"
                },
                "secretId": {
                    "type": "string",
                    "description": "The secret ID of the root ACL token.\n"
                }
            },
            "required": [
                "accessorId",
                "clusterId",
                "kubernetesSecret",
                "secretId"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the HCP Consul cluster.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ConsulClusterRootToken resources.\n",
                "properties": {
                    "accessorId": {
                        "type": "string",
                        "description": "The accessor ID of the root ACL token.\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the HCP Consul cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "kubernetesSecret": {
                        "type": "string",
                        "description": "The root ACL token Base64 encoded in a Kubernetes secret.\n"
                    },
                    "secretId": {
                        "type": "string",
                        "description": "The secret ID of the root ACL token.\n"
                    }
                },
                "type": "object"
            }
        },
        "hcp:index/consulSnapshot:ConsulSnapshot": {
            "description": "The Consul snapshot resource allows users to manage Consul snapshots of an HCP Consul cluster. Snapshots currently have a retention policy of 30 days.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as hcp from \"@pulumi/hcp\";\n\n// Note: Snapshots currently have a retention policy of 30 days. After that time, any Terraform\n// state refresh will note that a new snapshot resource will be created.\nconst example = new hcp.ConsulSnapshot(\"example\", {\n    clusterId: \"consul-cluster\",\n    snapshotName: \"my-snapshot\",\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the HCP Consul cluster.\n"
                },
                "consulVersion": {
                    "type": "string",
                    "description": "The version of Consul at the time of snapshot creation.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the HCP organization where the project the HCP Consul cluster is located.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project the HCP Consul cluster is located.\n"
                },
                "restoredAt": {
                    "type": "string",
                    "description": "Timestamp of when the snapshot was restored. If the snapshot has not been restored, this field will be blank.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the snapshot in bytes.\n"
                },
                "snapshotId": {
                    "type": "string",
                    "description": "The ID of the Consul snapshot\n"
                },
                "snapshotName": {
                    "type": "string",
                    "description": "The name of the snapshot.\n"
                }
            },
            "required": [
                "clusterId",
                "consulVersion",
                "organizationId",
                "projectId",
                "restoredAt",
                "size",
                "snapshotId",
                "snapshotName"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the HCP Consul cluster.\n",
                    "willReplaceOnChanges": true
                },
                "snapshotName": {
                    "type": "string",
                    "description": "The name of the snapshot.\n"
                }
            },
            "requiredInputs": [
                "clusterId",
                "snapshotName"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ConsulSnapshot resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the HCP Consul cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "consulVersion": {
                        "type": "string",
                        "description": "The version of Consul at the time of snapshot creation.\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The ID of the HCP organization where the project the HCP Consul cluster is located.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The ID of the project the HCP Consul cluster is located.\n"
                    },
                    "restoredAt": {
                        "type": "string",
                        "description": "Timestamp of when the snapshot was restored. If the snapshot has not been restored, this field will be blank.\n"
                    },
                    "size": {
                        "type": "integer",
                        "description": "The size of the snapshot in bytes.\n"
                    },
                    "snapshotId": {
                        "type": "string",
                        "description": "The ID of the Consul snapshot\n"
                    },
                    "snapshotName": {
                        "type": "string",
                        "description": "The name of the snapshot.\n"
                    }
                },
                "type": "object"
            }
        },
        "hcp:index/hvn:Hvn": {
            "description": "The HVN resource allows you to manage a HashiCorp Virtual Network in HCP.\n\nWe recommend the following when selecting the CIDR block of an HVN:\n\n- The CIDR block value must be a private IPv4 CIDR block within the [RFC1918](https://datatracker.ietf.org/doc/html/rfc1918) address space (10.*.*.*, 192.168.*.*, 172.[16-31].*.*).\n\n- The CIDR block value must be the first IP address of the desired CIDR block. The helper `cidrsubnet(\"172.16.1.1/24\", 0, 0)` will specify the first address of the CIDR block in the first argument.\n\n- The CIDR block value must end between /16 and /25.\n\n- If the CIDR block values for your HVN and VPCs overlap, then you will not be able to establish a connection. Ensure that any VPCs you plan to connect do not have overlapping values.\n\n- The default HVN CIDR block value does not overlap with the default CIDR block value for AWS VPCs (172.31.0.0/16). However, if you are planning to use this HVN in production, we recommend adding a custom value instead of using the default.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as hcp from \"@pulumi/hcp\";\n\nconst example = new hcp.Hvn(\"example\", {\n    cidrBlock: \"172.25.16.0/20\",\n    cloudProvider: \"aws\",\n    hvnId: \"main-hvn\",\n    region: \"us-west-2\",\n});\n```\n{{% /example %}}\n{{% /examples %}}\n\n## Import\n\n# The import ID is {hvn_id}\n\n```sh\n $ pulumi import hcp:index/hvn:Hvn example main-hvn\n```\n\n ",
            "properties": {
                "cidrBlock": {
                    "type": "string",
                    "description": "The CIDR range of the HVN. If this is not provided, the service will provide a default value.\n"
                },
                "cloudProvider": {
                    "type": "string",
                    "description": "The provider where the HVN is located. The provider 'aws' is generally available and 'azure' is in public beta.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time that the HVN was created.\n"
                },
                "hvnId": {
                    "type": "string",
                    "description": "The ID of the HashiCorp Virtual Network (HVN).\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the HCP organization where the HVN is located.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the HCP project where the HVN is located.\n"
                },
                "providerAccountId": {
                    "type": "string",
                    "description": "The provider account ID where the HVN is located.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the HVN is located.\n"
                },
                "selfLink": {
                    "type": "string",
                    "description": "A unique URL identifying the HVN.\n"
                }
            },
            "required": [
                "cidrBlock",
                "cloudProvider",
                "createdAt",
                "hvnId",
                "organizationId",
                "projectId",
                "providerAccountId",
                "region",
                "selfLink"
            ],
            "inputProperties": {
                "cidrBlock": {
                    "type": "string",
                    "description": "The CIDR range of the HVN. If this is not provided, the service will provide a default value.\n",
                    "willReplaceOnChanges": true
                },
                "cloudProvider": {
                    "type": "string",
                    "description": "The provider where the HVN is located. The provider 'aws' is generally available and 'azure' is in public beta.\n",
                    "willReplaceOnChanges": true
                },
                "hvnId": {
                    "type": "string",
                    "description": "The ID of the HashiCorp Virtual Network (HVN).\n",
                    "willReplaceOnChanges": true
                },
                "region": {
                    "type": "string",
                    "description": "The region where the HVN is located.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "cloudProvider",
                "hvnId",
                "region"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Hvn resources.\n",
                "properties": {
                    "cidrBlock": {
                        "type": "string",
                        "description": "The CIDR range of the HVN. If this is not provided, the service will provide a default value.\n",
                        "willReplaceOnChanges": true
                    },
                    "cloudProvider": {
                        "type": "string",
                        "description": "The provider where the HVN is located. The provider 'aws' is generally available and 'azure' is in public beta.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The time that the HVN was created.\n"
                    },
                    "hvnId": {
                        "type": "string",
                        "description": "The ID of the HashiCorp Virtual Network (HVN).\n",
                        "willReplaceOnChanges": true
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The ID of the HCP organization where the HVN is located.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The ID of the HCP project where the HVN is located.\n"
                    },
                    "providerAccountId": {
                        "type": "string",
                        "description": "The provider account ID where the HVN is located.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the HVN is located.\n",
                        "willReplaceOnChanges": true
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "A unique URL identifying the HVN.\n"
                    }
                },
                "type": "object"
            }
        },
        "hcp:index/hvnPeeringConnection:HvnPeeringConnection": {
            "description": "The HVN peering connection resource allows you to manage a peering connection between HVNs.\n\n\n## Import\n\n# The import ID requires the first HVN ID in the format {hvn_1_id}:{peering_id}\n\n```sh\n $ pulumi import hcp:index/hvnPeeringConnection:HvnPeeringConnection peer_1 hvn-1:peer-1\n```\n\n ",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The time that the peering connection was created.\n"
                },
                "expiresAt": {
                    "type": "string",
                    "description": "The time after which the peering connection will be considered expired if it hasn't transitioned into `ACCEPTED` or\n`ACTIVE` state.\n"
                },
                "hvn1": {
                    "type": "string",
                    "description": "The unique URL of one of the HVNs being peered.\n"
                },
                "hvn2": {
                    "type": "string",
                    "description": "The unique URL of one of the HVNs being peered.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the HCP organization where the peering connection is located. Always matches the HVNs' organization.\n"
                },
                "peeringId": {
                    "type": "string",
                    "description": "The ID of the peering connection.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the HCP project where the peering connection is located. Always matches the HVNs' project.\n"
                },
                "selfLink": {
                    "type": "string",
                    "description": "A unique URL identifying the peering connection\n"
                }
            },
            "required": [
                "createdAt",
                "expiresAt",
                "hvn1",
                "hvn2",
                "organizationId",
                "peeringId",
                "projectId",
                "selfLink"
            ],
            "inputProperties": {
                "hvn1": {
                    "type": "string",
                    "description": "The unique URL of one of the HVNs being peered.\n",
                    "willReplaceOnChanges": true
                },
                "hvn2": {
                    "type": "string",
                    "description": "The unique URL of one of the HVNs being peered.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "hvn1",
                "hvn2"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HvnPeeringConnection resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The time that the peering connection was created.\n"
                    },
                    "expiresAt": {
                        "type": "string",
                        "description": "The time after which the peering connection will be considered expired if it hasn't transitioned into `ACCEPTED` or\n`ACTIVE` state.\n"
                    },
                    "hvn1": {
                        "type": "string",
                        "description": "The unique URL of one of the HVNs being peered.\n",
                        "willReplaceOnChanges": true
                    },
                    "hvn2": {
                        "type": "string",
                        "description": "The unique URL of one of the HVNs being peered.\n",
                        "willReplaceOnChanges": true
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The ID of the HCP organization where the peering connection is located. Always matches the HVNs' organization.\n"
                    },
                    "peeringId": {
                        "type": "string",
                        "description": "The ID of the peering connection.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The ID of the HCP project where the peering connection is located. Always matches the HVNs' project.\n"
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "A unique URL identifying the peering connection\n"
                    }
                },
                "type": "object"
            }
        },
        "hcp:index/hvnRoute:HvnRoute": {
            "description": "\n\n## Import\n\n# The import ID is {hvn_id}:{hvn_route_id}\n\n```sh\n $ pulumi import hcp:index/hvnRoute:HvnRoute example main-hvn:example-hvn-route\n```\n\n ",
            "properties": {
                "createdAt": {
                    "type": "string",
                    "description": "The time that the HVN route was created.\n"
                },
                "destinationCidr": {
                    "type": "string",
                    "description": "The destination CIDR of the HVN route.\n"
                },
                "hvnLink": {
                    "type": "string",
                    "description": "The `self_link` of the HashiCorp Virtual Network (HVN).\n"
                },
                "hvnRouteId": {
                    "type": "string",
                    "description": "The ID of the HVN route.\n"
                },
                "selfLink": {
                    "type": "string",
                    "description": "A unique URL identifying the HVN route.\n"
                },
                "state": {
                    "type": "string",
                    "description": "The state of the HVN route.\n"
                },
                "targetLink": {
                    "type": "string",
                    "description": "A unique URL identifying the target of the HVN route. Examples of the target:\n[`aws_network_peering`](aws_network_peering.md), [`aws_transit_gateway_attachment`](aws_transit_gateway_attachment.md)\n"
                }
            },
            "required": [
                "createdAt",
                "destinationCidr",
                "hvnLink",
                "hvnRouteId",
                "selfLink",
                "state",
                "targetLink"
            ],
            "inputProperties": {
                "destinationCidr": {
                    "type": "string",
                    "description": "The destination CIDR of the HVN route.\n",
                    "willReplaceOnChanges": true
                },
                "hvnLink": {
                    "type": "string",
                    "description": "The `self_link` of the HashiCorp Virtual Network (HVN).\n",
                    "willReplaceOnChanges": true
                },
                "hvnRouteId": {
                    "type": "string",
                    "description": "The ID of the HVN route.\n",
                    "willReplaceOnChanges": true
                },
                "targetLink": {
                    "type": "string",
                    "description": "A unique URL identifying the target of the HVN route. Examples of the target:\n[`aws_network_peering`](aws_network_peering.md), [`aws_transit_gateway_attachment`](aws_transit_gateway_attachment.md)\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "destinationCidr",
                "hvnLink",
                "hvnRouteId",
                "targetLink"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering HvnRoute resources.\n",
                "properties": {
                    "createdAt": {
                        "type": "string",
                        "description": "The time that the HVN route was created.\n"
                    },
                    "destinationCidr": {
                        "type": "string",
                        "description": "The destination CIDR of the HVN route.\n",
                        "willReplaceOnChanges": true
                    },
                    "hvnLink": {
                        "type": "string",
                        "description": "The `self_link` of the HashiCorp Virtual Network (HVN).\n",
                        "willReplaceOnChanges": true
                    },
                    "hvnRouteId": {
                        "type": "string",
                        "description": "The ID of the HVN route.\n",
                        "willReplaceOnChanges": true
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "A unique URL identifying the HVN route.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "The state of the HVN route.\n"
                    },
                    "targetLink": {
                        "type": "string",
                        "description": "A unique URL identifying the target of the HVN route. Examples of the target:\n[`aws_network_peering`](aws_network_peering.md), [`aws_transit_gateway_attachment`](aws_transit_gateway_attachment.md)\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "hcp:index/vaultCluster:VaultCluster": {
            "description": "\n\n## Import\n\n# The import ID is {cluster_id}\n\n```sh\n $ pulumi import hcp:index/vaultCluster:VaultCluster example vault-cluster\n```\n\n ",
            "properties": {
                "auditLogConfig": {
                    "$ref": "#/types/hcp:index/VaultClusterAuditLogConfig:VaultClusterAuditLogConfig",
                    "description": "The audit logs configuration for export.\n(https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)\n"
                },
                "cloudProvider": {
                    "type": "string",
                    "description": "The provider where the HCP Vault cluster is located.\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the HCP Vault cluster.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time that the Vault cluster was created.\n"
                },
                "hvnId": {
                    "type": "string",
                    "description": "The ID of the HVN this HCP Vault cluster is associated to.\n"
                },
                "metricsConfig": {
                    "$ref": "#/types/hcp:index/VaultClusterMetricsConfig:VaultClusterMetricsConfig",
                    "description": "The metrics configuration for export.\n(https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)\n"
                },
                "minVaultVersion": {
                    "type": "string",
                    "description": "The minimum Vault version to use when creating the cluster. If not specified, it is defaulted to the version that is\ncurrently recommended by HCP.\n"
                },
                "namespace": {
                    "type": "string",
                    "description": "The name of the customer namespace this HCP Vault cluster is located in.\n"
                },
                "organizationId": {
                    "type": "string",
                    "description": "The ID of the organization this HCP Vault cluster is located in.\n"
                },
                "pathsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The performance replication [paths filter](https://learn.hashicorp.com/tutorials/vault/paths-filter). Applies to\nperformance replication secondaries only and operates in \"deny\" mode only.\n"
                },
                "primaryLink": {
                    "type": "string",
                    "description": "The `self_link` of the HCP Vault Plus tier cluster which is the primary in the performance replication setup with this\nHCP Vault Plus tier cluster. If not specified, it is a standalone Plus tier HCP Vault cluster.\n"
                },
                "projectId": {
                    "type": "string",
                    "description": "The ID of the project this HCP Vault cluster is located in.\n"
                },
                "publicEndpoint": {
                    "type": "boolean",
                    "description": "Denotes that the cluster has a public endpoint. Defaults to false.\n"
                },
                "region": {
                    "type": "string",
                    "description": "The region where the HCP Vault cluster is located.\n"
                },
                "selfLink": {
                    "type": "string",
                    "description": "A unique URL identifying the Vault cluster.\n"
                },
                "tier": {
                    "type": "string",
                    "description": "Tier of the HCP Vault cluster. Valid options for tiers - `dev`, `starter_small`, `standard_small`, `standard_medium`,\n`standard_large`, `plus_small`, `plus_medium`, `plus_large`. See [pricing\ninformation](https://cloud.hashicorp.com/pricing/vault).\n"
                },
                "vaultPrivateEndpointUrl": {
                    "type": "string",
                    "description": "The private URL for the Vault cluster.\n"
                },
                "vaultPublicEndpointUrl": {
                    "type": "string",
                    "description": "The public URL for the Vault cluster. This will be empty if `public_endpoint` is `false`.\n"
                },
                "vaultVersion": {
                    "type": "string",
                    "description": "The Vault version of the cluster.\n"
                }
            },
            "required": [
                "cloudProvider",
                "clusterId",
                "createdAt",
                "hvnId",
                "namespace",
                "organizationId",
                "projectId",
                "region",
                "selfLink",
                "tier",
                "vaultPrivateEndpointUrl",
                "vaultPublicEndpointUrl",
                "vaultVersion"
            ],
            "inputProperties": {
                "auditLogConfig": {
                    "$ref": "#/types/hcp:index/VaultClusterAuditLogConfig:VaultClusterAuditLogConfig",
                    "description": "The audit logs configuration for export.\n(https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)\n"
                },
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the HCP Vault cluster.\n",
                    "willReplaceOnChanges": true
                },
                "hvnId": {
                    "type": "string",
                    "description": "The ID of the HVN this HCP Vault cluster is associated to.\n",
                    "willReplaceOnChanges": true
                },
                "metricsConfig": {
                    "$ref": "#/types/hcp:index/VaultClusterMetricsConfig:VaultClusterMetricsConfig",
                    "description": "The metrics configuration for export.\n(https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)\n"
                },
                "minVaultVersion": {
                    "type": "string",
                    "description": "The minimum Vault version to use when creating the cluster. If not specified, it is defaulted to the version that is\ncurrently recommended by HCP.\n",
                    "willReplaceOnChanges": true
                },
                "pathsFilters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The performance replication [paths filter](https://learn.hashicorp.com/tutorials/vault/paths-filter). Applies to\nperformance replication secondaries only and operates in \"deny\" mode only.\n"
                },
                "primaryLink": {
                    "type": "string",
                    "description": "The `self_link` of the HCP Vault Plus tier cluster which is the primary in the performance replication setup with this\nHCP Vault Plus tier cluster. If not specified, it is a standalone Plus tier HCP Vault cluster.\n",
                    "willReplaceOnChanges": true
                },
                "publicEndpoint": {
                    "type": "boolean",
                    "description": "Denotes that the cluster has a public endpoint. Defaults to false.\n"
                },
                "tier": {
                    "type": "string",
                    "description": "Tier of the HCP Vault cluster. Valid options for tiers - `dev`, `starter_small`, `standard_small`, `standard_medium`,\n`standard_large`, `plus_small`, `plus_medium`, `plus_large`. See [pricing\ninformation](https://cloud.hashicorp.com/pricing/vault).\n"
                }
            },
            "requiredInputs": [
                "clusterId",
                "hvnId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VaultCluster resources.\n",
                "properties": {
                    "auditLogConfig": {
                        "$ref": "#/types/hcp:index/VaultClusterAuditLogConfig:VaultClusterAuditLogConfig",
                        "description": "The audit logs configuration for export.\n(https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)\n"
                    },
                    "cloudProvider": {
                        "type": "string",
                        "description": "The provider where the HCP Vault cluster is located.\n"
                    },
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the HCP Vault cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The time that the Vault cluster was created.\n"
                    },
                    "hvnId": {
                        "type": "string",
                        "description": "The ID of the HVN this HCP Vault cluster is associated to.\n",
                        "willReplaceOnChanges": true
                    },
                    "metricsConfig": {
                        "$ref": "#/types/hcp:index/VaultClusterMetricsConfig:VaultClusterMetricsConfig",
                        "description": "The metrics configuration for export.\n(https://learn.hashicorp.com/tutorials/cloud/vault-metrics-guide#metrics-streaming-configuration)\n"
                    },
                    "minVaultVersion": {
                        "type": "string",
                        "description": "The minimum Vault version to use when creating the cluster. If not specified, it is defaulted to the version that is\ncurrently recommended by HCP.\n",
                        "willReplaceOnChanges": true
                    },
                    "namespace": {
                        "type": "string",
                        "description": "The name of the customer namespace this HCP Vault cluster is located in.\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The ID of the organization this HCP Vault cluster is located in.\n"
                    },
                    "pathsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The performance replication [paths filter](https://learn.hashicorp.com/tutorials/vault/paths-filter). Applies to\nperformance replication secondaries only and operates in \"deny\" mode only.\n"
                    },
                    "primaryLink": {
                        "type": "string",
                        "description": "The `self_link` of the HCP Vault Plus tier cluster which is the primary in the performance replication setup with this\nHCP Vault Plus tier cluster. If not specified, it is a standalone Plus tier HCP Vault cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The ID of the project this HCP Vault cluster is located in.\n"
                    },
                    "publicEndpoint": {
                        "type": "boolean",
                        "description": "Denotes that the cluster has a public endpoint. Defaults to false.\n"
                    },
                    "region": {
                        "type": "string",
                        "description": "The region where the HCP Vault cluster is located.\n"
                    },
                    "selfLink": {
                        "type": "string",
                        "description": "A unique URL identifying the Vault cluster.\n"
                    },
                    "tier": {
                        "type": "string",
                        "description": "Tier of the HCP Vault cluster. Valid options for tiers - `dev`, `starter_small`, `standard_small`, `standard_medium`,\n`standard_large`, `plus_small`, `plus_medium`, `plus_large`. See [pricing\ninformation](https://cloud.hashicorp.com/pricing/vault).\n"
                    },
                    "vaultPrivateEndpointUrl": {
                        "type": "string",
                        "description": "The private URL for the Vault cluster.\n"
                    },
                    "vaultPublicEndpointUrl": {
                        "type": "string",
                        "description": "The public URL for the Vault cluster. This will be empty if `public_endpoint` is `false`.\n"
                    },
                    "vaultVersion": {
                        "type": "string",
                        "description": "The Vault version of the cluster.\n"
                    }
                },
                "type": "object"
            }
        },
        "hcp:index/vaultClusterAdminToken:VaultClusterAdminToken": {
            "description": "{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as hcp from \"@pulumi/hcp\";\n\nconst example = new hcp.VaultClusterAdminToken(\"example\", {\n    clusterId: \"test-vault-cluster\",\n});\n```\n{{% /example %}}\n{{% /examples %}}",
            "properties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the HCP Vault cluster.\n"
                },
                "createdAt": {
                    "type": "string",
                    "description": "The time that the admin token was created.\n"
                },
                "token": {
                    "type": "string",
                    "description": "The admin token of this HCP Vault cluster.\n"
                }
            },
            "required": [
                "clusterId",
                "createdAt",
                "token"
            ],
            "inputProperties": {
                "clusterId": {
                    "type": "string",
                    "description": "The ID of the HCP Vault cluster.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "clusterId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering VaultClusterAdminToken resources.\n",
                "properties": {
                    "clusterId": {
                        "type": "string",
                        "description": "The ID of the HCP Vault cluster.\n",
                        "willReplaceOnChanges": true
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "The time that the admin token was created.\n"
                    },
                    "token": {
                        "type": "string",
                        "description": "The admin token of this HCP Vault cluster.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "hcp:index/getAwsNetworkPeering:getAwsNetworkPeering": {
            "description": "The AWS network peering data source provides information about an existing network peering between an HVN and a peer AWS VPC.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAwsNetworkPeering.\n",
                "properties": {
                    "hvnId": {
                        "type": "string"
                    },
                    "peeringId": {
                        "type": "string"
                    },
                    "waitForActiveState": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "hvnId",
                    "peeringId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAwsNetworkPeering.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "expiresAt": {
                        "type": "string"
                    },
                    "hvnId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "peerAccountId": {
                        "type": "string"
                    },
                    "peerVpcId": {
                        "type": "string"
                    },
                    "peerVpcRegion": {
                        "type": "string"
                    },
                    "peeringId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "providerPeeringId": {
                        "type": "string"
                    },
                    "selfLink": {
                        "type": "string"
                    },
                    "waitForActiveState": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "expiresAt",
                    "hvnId",
                    "organizationId",
                    "peerAccountId",
                    "peerVpcId",
                    "peerVpcRegion",
                    "peeringId",
                    "projectId",
                    "providerPeeringId",
                    "selfLink",
                    "id"
                ]
            }
        },
        "hcp:index/getAwsTransitGatewayAttachment:getAwsTransitGatewayAttachment": {
            "description": "The AWS transit gateway attachment data source provides information about an existing transit gateway attachment.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAwsTransitGatewayAttachment.\n",
                "properties": {
                    "hvnId": {
                        "type": "string"
                    },
                    "transitGatewayAttachmentId": {
                        "type": "string"
                    },
                    "waitForActiveState": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "hvnId",
                    "transitGatewayAttachmentId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAwsTransitGatewayAttachment.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "expiresAt": {
                        "type": "string"
                    },
                    "hvnId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "providerTransitGatewayAttachmentId": {
                        "type": "string"
                    },
                    "selfLink": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "transitGatewayAttachmentId": {
                        "type": "string"
                    },
                    "transitGatewayId": {
                        "type": "string"
                    },
                    "waitForActiveState": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "expiresAt",
                    "hvnId",
                    "organizationId",
                    "projectId",
                    "providerTransitGatewayAttachmentId",
                    "selfLink",
                    "state",
                    "transitGatewayAttachmentId",
                    "transitGatewayId",
                    "id"
                ]
            }
        },
        "hcp:index/getAzurePeeringConnection:getAzurePeeringConnection": {
            "description": "\u003e **Note:** This data source is currently in public beta.\n\nThe Azure peering connection data source provides information about a peering connection between an HVN and a peer Azure VNet.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getAzurePeeringConnection.\n",
                "properties": {
                    "hvnLink": {
                        "type": "string"
                    },
                    "peeringId": {
                        "type": "string"
                    },
                    "waitForActiveState": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "hvnLink",
                    "peeringId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getAzurePeeringConnection.\n",
                "properties": {
                    "applicationId": {
                        "type": "string"
                    },
                    "azurePeeringId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "expiresAt": {
                        "type": "string"
                    },
                    "hvnLink": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "peerResourceGroupName": {
                        "type": "string"
                    },
                    "peerSubscriptionId": {
                        "type": "string"
                    },
                    "peerTenantId": {
                        "type": "string"
                    },
                    "peerVnetName": {
                        "type": "string"
                    },
                    "peerVnetRegion": {
                        "type": "string"
                    },
                    "peeringId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "selfLink": {
                        "type": "string"
                    },
                    "waitForActiveState": {
                        "type": "boolean"
                    }
                },
                "type": "object",
                "required": [
                    "applicationId",
                    "azurePeeringId",
                    "createdAt",
                    "expiresAt",
                    "hvnLink",
                    "organizationId",
                    "peerResourceGroupName",
                    "peerSubscriptionId",
                    "peerTenantId",
                    "peerVnetName",
                    "peerVnetRegion",
                    "peeringId",
                    "projectId",
                    "selfLink",
                    "id"
                ]
            }
        },
        "hcp:index/getConsulAgentHelmConfig:getConsulAgentHelmConfig": {
            "description": "The Consul agent Helm config data source provides Helm values for a Consul agent running in Kubernetes.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getConsulAgentHelmConfig.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "exposeGossipPorts": {
                        "type": "boolean"
                    },
                    "kubernetesEndpoint": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "kubernetesEndpoint"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getConsulAgentHelmConfig.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "config": {
                        "type": "string"
                    },
                    "exposeGossipPorts": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "kubernetesEndpoint": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "config",
                    "kubernetesEndpoint",
                    "id"
                ]
            }
        },
        "hcp:index/getConsulAgentKubernetesSecret:getConsulAgentKubernetesSecret": {
            "description": "The agent config Kubernetes secret data source provides Consul agents running in Kubernetes the configuration needed to connect to the Consul cluster.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getConsulAgentKubernetesSecret.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getConsulAgentKubernetesSecret.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "secret": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId",
                    "secret",
                    "id"
                ]
            }
        },
        "hcp:index/getConsulCluster:getConsulCluster": {
            "description": "The cluster data source provides information about an existing HCP Consul cluster.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getConsulCluster.\n",
                "properties": {
                    "clusterId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "clusterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getConsulCluster.\n",
                "properties": {
                    "autoHvnToHvnPeering": {
                        "type": "boolean"
                    },
                    "cloudProvider": {
                        "type": "string"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "connectEnabled": {
                        "type": "boolean"
                    },
                    "consulAutomaticUpgrades": {
                        "type": "boolean"
                    },
                    "consulCaFile": {
                        "type": "string"
                    },
                    "consulConfigFile": {
                        "type": "string"
                    },
                    "consulPrivateEndpointUrl": {
                        "type": "string"
                    },
                    "consulPublicEndpointUrl": {
                        "type": "string"
                    },
                    "consulSnapshotInterval": {
                        "type": "string"
                    },
                    "consulSnapshotRetention": {
                        "type": "string"
                    },
                    "consulVersion": {
                        "type": "string"
                    },
                    "datacenter": {
                        "type": "string"
                    },
                    "hvnId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "primaryLink": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "publicEndpoint": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string"
                    },
                    "scale": {
                        "type": "integer"
                    },
                    "selfLink": {
                        "type": "string"
                    },
                    "size": {
                        "type": "string"
                    },
                    "tier": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "autoHvnToHvnPeering",
                    "cloudProvider",
                    "clusterId",
                    "connectEnabled",
                    "consulAutomaticUpgrades",
                    "consulCaFile",
                    "consulConfigFile",
                    "consulPrivateEndpointUrl",
                    "consulPublicEndpointUrl",
                    "consulSnapshotInterval",
                    "consulSnapshotRetention",
                    "consulVersion",
                    "datacenter",
                    "hvnId",
                    "organizationId",
                    "primaryLink",
                    "projectId",
                    "publicEndpoint",
                    "region",
                    "scale",
                    "selfLink",
                    "size",
                    "tier",
                    "id"
                ]
            }
        },
        "hcp:index/getConsulVersions:getConsulVersions": {
            "description": "The Consul versions data source provides the Consul versions supported by HCP.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as hcp from \"@pulumi/hcp\";\n\nconst defaultConsulVersions = pulumi.output(hcp.getConsulVersions());\n```\n{{% /example %}}\n{{% /examples %}}",
            "outputs": {
                "description": "A collection of values returned by getConsulVersions.\n",
                "properties": {
                    "availables": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "previews": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "recommended": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "availables",
                    "previews",
                    "recommended",
                    "id"
                ]
            }
        },
        "hcp:index/getHvn:getHvn": {
            "description": "The HVN data source provides information about an existing HashiCorp Virtual Network.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getHvn.\n",
                "properties": {
                    "hvnId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "hvnId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getHvn.\n",
                "properties": {
                    "cidrBlock": {
                        "type": "string"
                    },
                    "cloudProvider": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "hvnId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "providerAccountId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "selfLink": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "cidrBlock",
                    "cloudProvider",
                    "createdAt",
                    "hvnId",
                    "organizationId",
                    "projectId",
                    "providerAccountId",
                    "region",
                    "selfLink",
                    "id"
                ]
            }
        },
        "hcp:index/getHvnPeeringConnection:getHvnPeeringConnection": {
            "description": "The HVN peering connection data source provides information about an existing peering connection between HVNs.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getHvnPeeringConnection.\n",
                "properties": {
                    "hvn1": {
                        "type": "string"
                    },
                    "hvn2": {
                        "type": "string"
                    },
                    "peeringId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "hvn1",
                    "hvn2",
                    "peeringId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getHvnPeeringConnection.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "expiresAt": {
                        "type": "string"
                    },
                    "hvn1": {
                        "type": "string"
                    },
                    "hvn2": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "peeringId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "selfLink": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "expiresAt",
                    "hvn1",
                    "hvn2",
                    "organizationId",
                    "peeringId",
                    "projectId",
                    "selfLink",
                    "id"
                ]
            }
        },
        "hcp:index/getHvnRoute:getHvnRoute": {
            "description": "The HVN route data source provides information about an existing HVN route.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getHvnRoute.\n",
                "properties": {
                    "hvnLink": {
                        "type": "string"
                    },
                    "hvnRouteId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "hvnLink",
                    "hvnRouteId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getHvnRoute.\n",
                "properties": {
                    "createdAt": {
                        "type": "string"
                    },
                    "destinationCidr": {
                        "type": "string"
                    },
                    "hvnLink": {
                        "type": "string"
                    },
                    "hvnRouteId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "selfLink": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "targetLink": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "createdAt",
                    "destinationCidr",
                    "hvnLink",
                    "hvnRouteId",
                    "selfLink",
                    "state",
                    "targetLink",
                    "id"
                ]
            }
        },
        "hcp:index/getPackerImage:getPackerImage": {
            "description": "The Packer Image data source iteration gets the most recent iteration (or build) of an image, given an iteration id.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getPackerImage.\n",
                "properties": {
                    "bucketName": {
                        "type": "string"
                    },
                    "cloudProvider": {
                        "type": "string"
                    },
                    "iterationId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "bucketName",
                    "cloudProvider",
                    "iterationId",
                    "region"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPackerImage.\n",
                "properties": {
                    "bucketName": {
                        "type": "string"
                    },
                    "buildId": {
                        "type": "string"
                    },
                    "cloudImageId": {
                        "type": "string"
                    },
                    "cloudProvider": {
                        "type": "string"
                    },
                    "componentType": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "iterationId": {
                        "type": "string"
                    },
                    "labels": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        }
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "packerRunUuid": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "revokeAt": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "bucketName",
                    "buildId",
                    "cloudImageId",
                    "cloudProvider",
                    "componentType",
                    "createdAt",
                    "iterationId",
                    "labels",
                    "organizationId",
                    "packerRunUuid",
                    "projectId",
                    "region",
                    "revokeAt",
                    "id"
                ]
            }
        },
        "hcp:index/getPackerImageIteration:getPackerImageIteration": {
            "description": "The Packer Image data source iteration gets the most recent iteration (or build) of an image, given a channel.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as hcp from \"@pulumi/hcp\";\n\nconst alpine = pulumi.output(hcp.getPackerImageIteration({\n    bucketName: \"alpine\",\n    channel: \"production\",\n}));\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPackerImageIteration.\n",
                "properties": {
                    "bucketName": {
                        "type": "string",
                        "description": "The slug of the HCP Packer Registry image bucket to pull from.\n"
                    },
                    "channel": {
                        "type": "string",
                        "description": "The channel that points to the version of the image you want.\n"
                    }
                },
                "type": "object",
                "required": [
                    "bucketName",
                    "channel"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPackerImageIteration.\n",
                "properties": {
                    "bucketName": {
                        "type": "string",
                        "description": "The slug of the HCP Packer Registry image bucket to pull from.\n"
                    },
                    "builds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/hcp:index/getPackerImageIterationBuild:getPackerImageIterationBuild"
                        },
                        "description": "Builds for this iteration. An iteration can have more than one build if it took more than one go to build all images.\n"
                    },
                    "channel": {
                        "type": "string",
                        "description": "The channel that points to the version of the image you want.\n"
                    },
                    "createdAt": {
                        "type": "string",
                        "description": "Creation time of this iteration\n"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "incrementalVersion": {
                        "type": "integer",
                        "description": "Incremental version of this iteration\n"
                    },
                    "organizationId": {
                        "type": "string",
                        "description": "The ID of the organization this HCP Packer registry is located in.\n"
                    },
                    "projectId": {
                        "type": "string",
                        "description": "The ID of the project this HCP Packer registry is located in.\n"
                    },
                    "revokeAt": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "bucketName",
                    "builds",
                    "channel",
                    "createdAt",
                    "incrementalVersion",
                    "organizationId",
                    "projectId",
                    "revokeAt",
                    "id"
                ]
            }
        },
        "hcp:index/getPackerIteration:getPackerIteration": {
            "description": "The Packer Image data source iteration gets the most recent iteration (or build) of an image, given a channel.\n\n{{% examples %}}\n## Example Usage\n{{% example %}}\n\n```typescript\nimport * as pulumi from \"@pulumi/pulumi\";\nimport * as hcp from \"@pulumi/hcp\";\n\nconst hardened_source = pulumi.output(hcp.getPackerIteration({\n    bucketName: \"hardened-ubuntu-16-04\",\n    channel: \"megan-test\",\n}));\n```\n{{% /example %}}\n{{% /examples %}}",
            "inputs": {
                "description": "A collection of arguments for invoking getPackerIteration.\n",
                "properties": {
                    "bucketName": {
                        "type": "string"
                    },
                    "channel": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "bucketName",
                    "channel"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPackerIteration.\n",
                "properties": {
                    "authorId": {
                        "type": "string"
                    },
                    "bucketName": {
                        "type": "string"
                    },
                    "channel": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "fingerprint": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "incrementalVersion": {
                        "type": "integer"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "revokeAt": {
                        "type": "string"
                    },
                    "ulid": {
                        "type": "string"
                    },
                    "updatedAt": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "authorId",
                    "bucketName",
                    "channel",
                    "createdAt",
                    "fingerprint",
                    "incrementalVersion",
                    "organizationId",
                    "projectId",
                    "revokeAt",
                    "ulid",
                    "updatedAt",
                    "id"
                ]
            }
        },
        "hcp:index/getVaultCluster:getVaultCluster": {
            "description": "The cluster data source provides information about an existing HCP Vault cluster.\n",
            "inputs": {
                "description": "A collection of arguments for invoking getVaultCluster.\n",
                "properties": {
                    "auditLogConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/hcp:index/getVaultClusterAuditLogConfig:getVaultClusterAuditLogConfig"
                        }
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "metricsConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/hcp:index/getVaultClusterMetricsConfig:getVaultClusterMetricsConfig"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "clusterId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVaultCluster.\n",
                "properties": {
                    "auditLogConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/hcp:index/getVaultClusterAuditLogConfig:getVaultClusterAuditLogConfig"
                        }
                    },
                    "cloudProvider": {
                        "type": "string"
                    },
                    "clusterId": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string"
                    },
                    "hvnId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "metricsConfigs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/hcp:index/getVaultClusterMetricsConfig:getVaultClusterMetricsConfig"
                        }
                    },
                    "minVaultVersion": {
                        "type": "string"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "organizationId": {
                        "type": "string"
                    },
                    "pathsFilters": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "primaryLink": {
                        "type": "string"
                    },
                    "projectId": {
                        "type": "string"
                    },
                    "publicEndpoint": {
                        "type": "boolean"
                    },
                    "region": {
                        "type": "string"
                    },
                    "selfLink": {
                        "type": "string"
                    },
                    "tier": {
                        "type": "string"
                    },
                    "vaultPrivateEndpointUrl": {
                        "type": "string"
                    },
                    "vaultPublicEndpointUrl": {
                        "type": "string"
                    },
                    "vaultVersion": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "auditLogConfigs",
                    "cloudProvider",
                    "clusterId",
                    "createdAt",
                    "hvnId",
                    "metricsConfigs",
                    "minVaultVersion",
                    "namespace",
                    "organizationId",
                    "pathsFilters",
                    "primaryLink",
                    "projectId",
                    "publicEndpoint",
                    "region",
                    "selfLink",
                    "tier",
                    "vaultPrivateEndpointUrl",
                    "vaultPublicEndpointUrl",
                    "vaultVersion",
                    "id"
                ]
            }
        }
    }
}