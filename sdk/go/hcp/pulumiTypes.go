// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package hcp

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GetPackerImageIterationBuild struct {
	// Name of the cloud provider this image is stored-in, if any.
	CloudProvider string `pulumi:"cloudProvider"`
	// Name of the builder that built this. Ex: 'amazon-ebs.example'.
	ComponentType string `pulumi:"componentType"`
	// Creation time of this build.
	CreatedAt string `pulumi:"createdAt"`
	// HCP ID of this build.
	Id     string                              `pulumi:"id"`
	Images []GetPackerImageIterationBuildImage `pulumi:"images"`
	// Labels for this build.
	Labels map[string]string `pulumi:"labels"`
	// Packer generated UUID of this build.
	PackerRunUuid string `pulumi:"packerRunUuid"`
	// Status of this build. DONE means that all images tied to this build were successfully built.
	Status string `pulumi:"status"`
	// Time this build was last updated.
	UpdatedAt string `pulumi:"updatedAt"`
}

// GetPackerImageIterationBuildInput is an input type that accepts GetPackerImageIterationBuildArgs and GetPackerImageIterationBuildOutput values.
// You can construct a concrete instance of `GetPackerImageIterationBuildInput` via:
//
//          GetPackerImageIterationBuildArgs{...}
type GetPackerImageIterationBuildInput interface {
	pulumi.Input

	ToGetPackerImageIterationBuildOutput() GetPackerImageIterationBuildOutput
	ToGetPackerImageIterationBuildOutputWithContext(context.Context) GetPackerImageIterationBuildOutput
}

type GetPackerImageIterationBuildArgs struct {
	// Name of the cloud provider this image is stored-in, if any.
	CloudProvider pulumi.StringInput `pulumi:"cloudProvider"`
	// Name of the builder that built this. Ex: 'amazon-ebs.example'.
	ComponentType pulumi.StringInput `pulumi:"componentType"`
	// Creation time of this build.
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// HCP ID of this build.
	Id     pulumi.StringInput                          `pulumi:"id"`
	Images GetPackerImageIterationBuildImageArrayInput `pulumi:"images"`
	// Labels for this build.
	Labels pulumi.StringMapInput `pulumi:"labels"`
	// Packer generated UUID of this build.
	PackerRunUuid pulumi.StringInput `pulumi:"packerRunUuid"`
	// Status of this build. DONE means that all images tied to this build were successfully built.
	Status pulumi.StringInput `pulumi:"status"`
	// Time this build was last updated.
	UpdatedAt pulumi.StringInput `pulumi:"updatedAt"`
}

func (GetPackerImageIterationBuildArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPackerImageIterationBuild)(nil)).Elem()
}

func (i GetPackerImageIterationBuildArgs) ToGetPackerImageIterationBuildOutput() GetPackerImageIterationBuildOutput {
	return i.ToGetPackerImageIterationBuildOutputWithContext(context.Background())
}

func (i GetPackerImageIterationBuildArgs) ToGetPackerImageIterationBuildOutputWithContext(ctx context.Context) GetPackerImageIterationBuildOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPackerImageIterationBuildOutput)
}

// GetPackerImageIterationBuildArrayInput is an input type that accepts GetPackerImageIterationBuildArray and GetPackerImageIterationBuildArrayOutput values.
// You can construct a concrete instance of `GetPackerImageIterationBuildArrayInput` via:
//
//          GetPackerImageIterationBuildArray{ GetPackerImageIterationBuildArgs{...} }
type GetPackerImageIterationBuildArrayInput interface {
	pulumi.Input

	ToGetPackerImageIterationBuildArrayOutput() GetPackerImageIterationBuildArrayOutput
	ToGetPackerImageIterationBuildArrayOutputWithContext(context.Context) GetPackerImageIterationBuildArrayOutput
}

type GetPackerImageIterationBuildArray []GetPackerImageIterationBuildInput

func (GetPackerImageIterationBuildArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPackerImageIterationBuild)(nil)).Elem()
}

func (i GetPackerImageIterationBuildArray) ToGetPackerImageIterationBuildArrayOutput() GetPackerImageIterationBuildArrayOutput {
	return i.ToGetPackerImageIterationBuildArrayOutputWithContext(context.Background())
}

func (i GetPackerImageIterationBuildArray) ToGetPackerImageIterationBuildArrayOutputWithContext(ctx context.Context) GetPackerImageIterationBuildArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPackerImageIterationBuildArrayOutput)
}

type GetPackerImageIterationBuildOutput struct{ *pulumi.OutputState }

func (GetPackerImageIterationBuildOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPackerImageIterationBuild)(nil)).Elem()
}

func (o GetPackerImageIterationBuildOutput) ToGetPackerImageIterationBuildOutput() GetPackerImageIterationBuildOutput {
	return o
}

func (o GetPackerImageIterationBuildOutput) ToGetPackerImageIterationBuildOutputWithContext(ctx context.Context) GetPackerImageIterationBuildOutput {
	return o
}

// Name of the cloud provider this image is stored-in, if any.
func (o GetPackerImageIterationBuildOutput) CloudProvider() pulumi.StringOutput {
	return o.ApplyT(func(v GetPackerImageIterationBuild) string { return v.CloudProvider }).(pulumi.StringOutput)
}

// Name of the builder that built this. Ex: 'amazon-ebs.example'.
func (o GetPackerImageIterationBuildOutput) ComponentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPackerImageIterationBuild) string { return v.ComponentType }).(pulumi.StringOutput)
}

// Creation time of this build.
func (o GetPackerImageIterationBuildOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetPackerImageIterationBuild) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// HCP ID of this build.
func (o GetPackerImageIterationBuildOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPackerImageIterationBuild) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPackerImageIterationBuildOutput) Images() GetPackerImageIterationBuildImageArrayOutput {
	return o.ApplyT(func(v GetPackerImageIterationBuild) []GetPackerImageIterationBuildImage { return v.Images }).(GetPackerImageIterationBuildImageArrayOutput)
}

// Labels for this build.
func (o GetPackerImageIterationBuildOutput) Labels() pulumi.StringMapOutput {
	return o.ApplyT(func(v GetPackerImageIterationBuild) map[string]string { return v.Labels }).(pulumi.StringMapOutput)
}

// Packer generated UUID of this build.
func (o GetPackerImageIterationBuildOutput) PackerRunUuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetPackerImageIterationBuild) string { return v.PackerRunUuid }).(pulumi.StringOutput)
}

// Status of this build. DONE means that all images tied to this build were successfully built.
func (o GetPackerImageIterationBuildOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetPackerImageIterationBuild) string { return v.Status }).(pulumi.StringOutput)
}

// Time this build was last updated.
func (o GetPackerImageIterationBuildOutput) UpdatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetPackerImageIterationBuild) string { return v.UpdatedAt }).(pulumi.StringOutput)
}

type GetPackerImageIterationBuildArrayOutput struct{ *pulumi.OutputState }

func (GetPackerImageIterationBuildArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPackerImageIterationBuild)(nil)).Elem()
}

func (o GetPackerImageIterationBuildArrayOutput) ToGetPackerImageIterationBuildArrayOutput() GetPackerImageIterationBuildArrayOutput {
	return o
}

func (o GetPackerImageIterationBuildArrayOutput) ToGetPackerImageIterationBuildArrayOutputWithContext(ctx context.Context) GetPackerImageIterationBuildArrayOutput {
	return o
}

func (o GetPackerImageIterationBuildArrayOutput) Index(i pulumi.IntInput) GetPackerImageIterationBuildOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPackerImageIterationBuild {
		return vs[0].([]GetPackerImageIterationBuild)[vs[1].(int)]
	}).(GetPackerImageIterationBuildOutput)
}

type GetPackerImageIterationBuildImage struct {
	// Creation time of this iteration
	CreatedAt string `pulumi:"createdAt"`
	// The ID of this resource.
	Id      string `pulumi:"id"`
	ImageId string `pulumi:"imageId"`
	Region  string `pulumi:"region"`
}

// GetPackerImageIterationBuildImageInput is an input type that accepts GetPackerImageIterationBuildImageArgs and GetPackerImageIterationBuildImageOutput values.
// You can construct a concrete instance of `GetPackerImageIterationBuildImageInput` via:
//
//          GetPackerImageIterationBuildImageArgs{...}
type GetPackerImageIterationBuildImageInput interface {
	pulumi.Input

	ToGetPackerImageIterationBuildImageOutput() GetPackerImageIterationBuildImageOutput
	ToGetPackerImageIterationBuildImageOutputWithContext(context.Context) GetPackerImageIterationBuildImageOutput
}

type GetPackerImageIterationBuildImageArgs struct {
	// Creation time of this iteration
	CreatedAt pulumi.StringInput `pulumi:"createdAt"`
	// The ID of this resource.
	Id      pulumi.StringInput `pulumi:"id"`
	ImageId pulumi.StringInput `pulumi:"imageId"`
	Region  pulumi.StringInput `pulumi:"region"`
}

func (GetPackerImageIterationBuildImageArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPackerImageIterationBuildImage)(nil)).Elem()
}

func (i GetPackerImageIterationBuildImageArgs) ToGetPackerImageIterationBuildImageOutput() GetPackerImageIterationBuildImageOutput {
	return i.ToGetPackerImageIterationBuildImageOutputWithContext(context.Background())
}

func (i GetPackerImageIterationBuildImageArgs) ToGetPackerImageIterationBuildImageOutputWithContext(ctx context.Context) GetPackerImageIterationBuildImageOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPackerImageIterationBuildImageOutput)
}

// GetPackerImageIterationBuildImageArrayInput is an input type that accepts GetPackerImageIterationBuildImageArray and GetPackerImageIterationBuildImageArrayOutput values.
// You can construct a concrete instance of `GetPackerImageIterationBuildImageArrayInput` via:
//
//          GetPackerImageIterationBuildImageArray{ GetPackerImageIterationBuildImageArgs{...} }
type GetPackerImageIterationBuildImageArrayInput interface {
	pulumi.Input

	ToGetPackerImageIterationBuildImageArrayOutput() GetPackerImageIterationBuildImageArrayOutput
	ToGetPackerImageIterationBuildImageArrayOutputWithContext(context.Context) GetPackerImageIterationBuildImageArrayOutput
}

type GetPackerImageIterationBuildImageArray []GetPackerImageIterationBuildImageInput

func (GetPackerImageIterationBuildImageArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPackerImageIterationBuildImage)(nil)).Elem()
}

func (i GetPackerImageIterationBuildImageArray) ToGetPackerImageIterationBuildImageArrayOutput() GetPackerImageIterationBuildImageArrayOutput {
	return i.ToGetPackerImageIterationBuildImageArrayOutputWithContext(context.Background())
}

func (i GetPackerImageIterationBuildImageArray) ToGetPackerImageIterationBuildImageArrayOutputWithContext(ctx context.Context) GetPackerImageIterationBuildImageArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPackerImageIterationBuildImageArrayOutput)
}

type GetPackerImageIterationBuildImageOutput struct{ *pulumi.OutputState }

func (GetPackerImageIterationBuildImageOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPackerImageIterationBuildImage)(nil)).Elem()
}

func (o GetPackerImageIterationBuildImageOutput) ToGetPackerImageIterationBuildImageOutput() GetPackerImageIterationBuildImageOutput {
	return o
}

func (o GetPackerImageIterationBuildImageOutput) ToGetPackerImageIterationBuildImageOutputWithContext(ctx context.Context) GetPackerImageIterationBuildImageOutput {
	return o
}

// Creation time of this iteration
func (o GetPackerImageIterationBuildImageOutput) CreatedAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetPackerImageIterationBuildImage) string { return v.CreatedAt }).(pulumi.StringOutput)
}

// The ID of this resource.
func (o GetPackerImageIterationBuildImageOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPackerImageIterationBuildImage) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPackerImageIterationBuildImageOutput) ImageId() pulumi.StringOutput {
	return o.ApplyT(func(v GetPackerImageIterationBuildImage) string { return v.ImageId }).(pulumi.StringOutput)
}

func (o GetPackerImageIterationBuildImageOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetPackerImageIterationBuildImage) string { return v.Region }).(pulumi.StringOutput)
}

type GetPackerImageIterationBuildImageArrayOutput struct{ *pulumi.OutputState }

func (GetPackerImageIterationBuildImageArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPackerImageIterationBuildImage)(nil)).Elem()
}

func (o GetPackerImageIterationBuildImageArrayOutput) ToGetPackerImageIterationBuildImageArrayOutput() GetPackerImageIterationBuildImageArrayOutput {
	return o
}

func (o GetPackerImageIterationBuildImageArrayOutput) ToGetPackerImageIterationBuildImageArrayOutputWithContext(ctx context.Context) GetPackerImageIterationBuildImageArrayOutput {
	return o
}

func (o GetPackerImageIterationBuildImageArrayOutput) Index(i pulumi.IntInput) GetPackerImageIterationBuildImageOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPackerImageIterationBuildImage {
		return vs[0].([]GetPackerImageIterationBuildImage)[vs[1].(int)]
	}).(GetPackerImageIterationBuildImageOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetPackerImageIterationBuildInput)(nil)).Elem(), GetPackerImageIterationBuildArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPackerImageIterationBuildArrayInput)(nil)).Elem(), GetPackerImageIterationBuildArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPackerImageIterationBuildImageInput)(nil)).Elem(), GetPackerImageIterationBuildImageArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPackerImageIterationBuildImageArrayInput)(nil)).Elem(), GetPackerImageIterationBuildImageArray{})
	pulumi.RegisterOutputType(GetPackerImageIterationBuildOutput{})
	pulumi.RegisterOutputType(GetPackerImageIterationBuildArrayOutput{})
	pulumi.RegisterOutputType(GetPackerImageIterationBuildImageOutput{})
	pulumi.RegisterOutputType(GetPackerImageIterationBuildImageArrayOutput{})
}
